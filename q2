2222222222222

A.  Explain what recursion is and when it is useful.
    Explain what the |termination step| and |recursion step| are in a recursive method.

Recursion is when we define a step in the code in a method which calls upon the method itself so that it keeps 
executing it until it exhausts the limit. 
We use it when we have to execute the same code a lot of times but we dont know how many times we need to execute it.

B.  Describe the difference between a Queue and a Stack.

A stack is a vertical arrangement of link on top of each other. It follows Last in first out (LIFO). 
In a stack we can pop out the top most link or we can peek on the top most object or we can push in a new head at the top. 
An example of the stack would be the stack of dishes during lunch period. The topmost link on the stack is the head and it 
is the last one to go in but the first one to go out because the we pop the link that is on the top, while a queue is a 
horizontal arrangement of links which connect to each other in a certain order. It follows First in first out(FIFO). 
In a queue the link that is the head goes in first and is the first one that can be taken out. An example would be the queue at 
the lunch room where you get in the line and when you are the head of the line you go out.

C.  Write a class for an element of a doublely-linked list.

public class element_doub {
    public element_doub Next;
    public element_doub Prev;
    public Object obj;

    public element_doub(Object obj, element_doub ele, element_doub prev){
        this.obj = O;
        this.Next = ele;
        this.Prev = prev;
    }
    
    public void append(element_doub last){
        this.last().Next = last;
    }

    public element_doub lasty(){
        element_doub Temp = this;
        while(Temp.Next != null){
            Temp = Temp.Next;
        }
        return Temp;
    }
}

D.  Explain what a Merkle Tree is.  
    Describe the structure and purpose of a Merkle Tree.
    What is the Merkle root?
    What is the function of a certificate in this data structure?
    
Merkel tree is basically a hash tree which contain large data structures which allows us to verify the data efficiently.

A merkel tree has a structure very similar to binary tree. In a merkel tree, we take hashes of a lot of files, 
and we make hash of set of two file hashes in order and then we keep hashing them in the same order until we have one mother 
hash for all of them which can be used to show the proof of work of everything by using just one hash.
      
It is the known as the mother hash, it the element on the top of the tree that is the hash of all the data.

The function of a certificate is to return the root and any node needed to verify the document which was used to build the tree.    
